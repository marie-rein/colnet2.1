@page "/Horaire"
@using ColNet2._0.Services;
@using ColNet2._0.Models;
@using ColNet2._0.CustomModels;
@inject HoraireService serviceHoraire;
@inject GetLoggedUser userLogger

<PageTitle>Emploie Du Temps</PageTitle>

@*@foreach (var jourEmploiDuTemps in emploisDuTemps)
{*@
<div class="jour-emploi-du-temps">
    @*<h4>@jourEmploiDuTemps.JourSemaine</h4>*@
    <div>

        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Heure</th>
                    <th scope="col">Lundi</th>
                    <th scope="col">Mardi</th>
                    <th scope="col">Mercredi</th>
                    <th scope="col">Jeudi</th>
                    <th scope="col">Vendredi</th>
                </tr>
            </thead>
            <tbody>
              
                @foreach (var heure in new List<string> { "08h à 09h", "09h à 10h", "10h à 11h", "11h à 12h", "12h à 13h", "13h à 14h", "14h à 15h", "15h à 16h", "16h à 17h", "17h à 18h" })
                {
                    <tr>
                        <td>@heure</td>
                        @foreach (var jour in new List<string> { "lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi" })
                        {
                            <td>
                                @foreach (var periode in sortedSchedule.Where(s => s.Jours == jour))
                                {
                                    <div>
                                        <strong>@periode.NomCour</strong><br />
                                        @periode.Locale <br />
                                        @periode.HeureDebut <br />
                                        @periode.HeureFin
                                    </div>
                                }
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>

        
    </div>
</div>
@*}*@

@code {
    private List<JourEmploiDuTemps> emploisDuTemps = new List<JourEmploiDuTemps>();
    private List<VueHoraire> periodeList { get; set; } = new List<VueHoraire>();
    List<VueHoraire> sortedSchedule { get; set; } = new List<VueHoraire>();
    private string emailEtudiant = string.Empty;
    private List<string> lesHeures = new List<string> { "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18" };

    private string message = string.Empty;


    protected override async Task OnInitializedAsync()
    {
        emailEtudiant = await userLogger.GetUserEmail();

        if (emailEtudiant != null)
        {
            sortedSchedule = await serviceHoraire.RemplirProgramme(emailEtudiant);

            //sortedSchedule =
            //   periodeList.OrderBy(s => s.Jours).ThenBy(s => s.HeureDebut).ToList();

        }

        //emploisDuTemps = await GetEmploiDuTemps();
    }

    private void CheckHeure(string heure)
    {

        switch (heure)
        {
            //case "08:00":
            //if (sortedSchedule)
            //    {
                    
            //    }
            //    break;
            //default:
        }
    }
    // Create a sorted version of the schedule
 

    //private async Task<List<JourEmploiDuTemps>> GetEmploiDuTemps()
    //{
    //    programme = await serviceHoraire.RemplirProgramme();

    //    return  new JourEmploiDuTemps(programme);
    //}

    string GetDayName(string abbreviation)
    {
        switch (abbreviation)
        {
            case "lundi":
                return "Monday";
            case "Mardi":
                return "Tuesday";
            case "Mercredi":
                return "Wednesday";
            case "Jeudi":
                return "Thursday";
            case "Vendredi":
                return "Friday";
            default:
                return string.Empty;
        }
    }
    public async Task chargerHoraire()
    {
        try
        {

            message = "Évaluation ajoutée avec succès";

        }
        catch (Exception)
        {
            message = "Erreur survenue. l'horaire n'a pas réussi a charger. Veillez réesayer plus tard ";

        }

    }
    public class JourEmploiDuTemps
    {
        public string JourSemaine { get; set; }
        public List<Periode> Periodes { get; set; } = new List<Periode>();

        public JourEmploiDuTemps(List<TblProgramme> programme)
        {
            programme = new List<TblProgramme>();
        }
    }

    public class Periode
    {
        public int nomCour { get; set; }
        public string session { get; set; }
        public string HeureDebut { get; set; }
        public string heureFin { get; set; }
        public string Jours { get; set; }
        public string locale { get; set; }
    }
}
